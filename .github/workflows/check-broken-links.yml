name: Check Broken Links

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 1'
  push:
    branches: [ master ]

jobs:
  check-links:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true

      - name: Rename remote files to standard names
        run: |
          if [ -f Gemfile.remote ]; then mv Gemfile.remote Gemfile; fi
          if [ -f _config.remote.yml ]; then mv _config.remote.yml _config.yml; fi

      - name: Install html-proofer and other dependencies
        run: |
          gem install html-proofer -v 5.0.10 nokogiri
          gem install bundler jekyll
          bundle install

      - name: Build site
        run: |
          bundle exec jekyll build

      - name: List contents of _site directory
        run: |
          ls -la _site

      - name: Check links with html-proofer
        run: |
          cat > check_links.rb << 'EOF'
#!/usr/bin/env ruby
require 'html-proofer'

options = {
  assume_extension: true,
  check_favicon: true,
  check_html: true,
  check_img_http: true,
  enforce_https: true,
  check_opengraph: true,
  cache: {
    timeframe: {
      internal: '2w'
    }
  },
  typhoeus: {
    followlocation: true,
    connecttimeout: 10,
    timeout: 30,
    ssl_verifypeer: false,
    ssl_verifyhost: 0
  }
}

begin
  puts "Checking links in _site directory..."
  proofer = HtmlProofer.check_directory("./_site", options)
  proofer.run
rescue => e
  puts "Error during link checking: #{e.message}"
  exit 1
end
EOF
          chmod +x check_links.rb
          ruby check_links.rb

      - name: Create report artifact
        if: always()
        run: |
          mkdir -p broken_links_report
          mv tmp/.htmlproofer broken_links_report/ || true
          echo "## Broken Links Check Results" > broken_links_report/summary.md
          echo "Check completed at $(date)" >> broken_links_report/summary.md
          echo "For detailed results, see the report files." >> broken_links_report/summary.md

      - name: Upload report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: broken-links-report
          path: broken_links_report

      - name: Notify on failure
        if: failure()
        run: |
          echo "‚ùå Broken links were found in the website. Check the GitHub Actions run for details."
