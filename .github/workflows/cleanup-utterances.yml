name: Clean Utterances Test Issues and Update Counter

on:
  workflow_dispatch: # Manual run
  schedule:
    - cron: '0 * * * *' # Optional: run every hour

permissions:
  issues: write  # Required to close issues
  contents: read  # Required to read the repository's content

jobs:
  clean-and-update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install GitHub CLI
        run: sudo apt-get install gh -y

      - name: Debug GitHub Token
        run: |
          echo "Debugging GitHub Token setup..."
          echo "Token is: ${{ secrets.GITHUB_TOKEN }}"  # This won't expose the token itself

      - name: Authenticate GitHub CLI
        run: |
          echo "Authenticating GitHub CLI..."
          echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token

      - name: List issues with 'test-comment' label
        run: |
          echo "🔍 Listing open issues with the 'test-comment' label..."
          gh issue list --label "test-comment" --state open --json number,labels --limit 100
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Close issues labeled 'test-comment'
        run: |
          echo "🔍 Closing test-comment issues..."
          gh issue list --label "test-comment" --state open --json number --limit 100 |
            jq -c '.[]' |
            while read -r issue; do
              num=$(echo "$issue" | jq -r '.number')
              echo "🗑️ Attempting to close issue #$num"
              # Close the issue, and print success or failure
              if gh issue close "$num" --reason "not_planned"; then
                echo "✅ Successfully closed issue #$num"
              else
                echo "❌ Failed to close issue #$num"
              fi
            done
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Count real (non-test) issues
        id: count_issues
        run: |
          TOTAL=$(gh issue list --state open --json labels | \
            jq '[.[] | select(.labels | all(.name != "test-comment"))] | length')
          echo "open_issue_count=$TOTAL" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Comment Counter Issue
        run: |
          ISSUE_NUMBER=$(gh issue list --state open --search "Comment Thread Counter in:title" --json number -q '.[0].number')

          if [ -z "$ISSUE_NUMBER" ]; then
            echo "⚠️ No 'Comment Thread Counter' issue found, exiting..."
            exit 1
          else
            echo "📍 Found 'Comment Thread Counter' issue #$ISSUE_NUMBER"
          fi

          COUNT=${{ steps.count_issues.outputs.open_issue_count }}
          BODY="📊 **Current active comment threads:** $COUNT\n\n_Last updated: $(date -u)_"

          echo -e "$BODY" > tmp.md
          gh issue edit "$ISSUE_NUMBER" --body-file tmp.md
          rm tmp.md
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
