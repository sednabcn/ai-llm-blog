name: Clean Old Workflow Runs and Artifacts

on:
  schedule:
    - cron: '0 */2 * * *'  # Every 2 hours

jobs:
  clean-up:
    runs-on: ubuntu-latest

    steps:
    - name: Delete workflow runs and artifacts older than two hours (except latest Jekyll)
      run: |
        echo "‚öôÔ∏è Starting cleanup job..."

        CURRENT_TIME=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
        TWO_HOUR_AGO=$(date -u -d '2 hour ago' +"%Y-%m-%dT%H:%M:%SZ")
        API_URL="https://api.github.com/repos/${{ github.repository }}"
        TOKEN=${{ secrets.GITHUB_TOKEN }}

        echo "üì• Fetching all workflow runs..."
        RUNS=$(curl -s -H "Authorization: Bearer $TOKEN" "$API_URL/actions/runs")

        echo "üîç Identifying latest Jekyll deployment run..."
        LATEST_JEKYLL_RUN_ID=$(echo "$RUNS" | jq -r '
          .workflow_runs
          | sort_by(.created_at)
          | reverse
          | map(select(.name | test("jekyll|deploy"; "i")))
          | .[0].id
        ')
        echo "üö´ Skipping deletion for Jekyll run ID: $LATEST_JEKYLL_RUN_ID"

        echo "üóëÔ∏è Deleting workflow runs older than $TWO_HOUR_AGO (except latest Jekyll)"
        echo "$RUNS" | jq -c --arg TWO_HOUR_AGO "$TWO_HOUR_AGO" '.workflow_runs[] | select(.created_at < $TWO_HOUR_AGO)' | while read -r run; do
          ID=$(echo "$run" | jq -r '.id')
          CREATED=$(echo "$run" | jq -r '.created_at')

          if [[ "$ID" == "$LATEST_JEKYLL_RUN_ID" ]]; then
            echo "‚è≠Ô∏è Skipping latest Jekyll run (ID: $ID)"
            continue
          fi

          echo "‚Üí Deleting run ID: $ID (created at: $CREATED)"
          curl -X DELETE -H "Authorization: Bearer $TOKEN" "$API_URL/actions/runs/$ID"
        done

        # ---------------------------
        # 2Ô∏è‚É£ Delete old artifacts
        # ---------------------------
        echo "üßπ Fetching artifacts..."
        ARTIFACTS=$(curl -s -H "Authorization: Bearer $TOKEN" "$API_URL/actions/artifacts")

        echo "$ARTIFACTS" | jq -c --arg TWO_HOUR_AGO "$TWO_HOUR_AGO" '.artifacts[] | select(.created_at < $TWO_HOUR_AGO)' | while read -r artifact; do
          ARTIFACT_ID=$(echo "$artifact" | jq -r '.id')
          ARTIFACT_NAME=$(echo "$artifact" | jq -r '.name')
          echo "‚Üí Deleting artifact ID: $ARTIFACT_ID (name: $ARTIFACT_NAME)"
          curl -X DELETE -H "Authorization: Bearer $TOKEN" "$API_URL/actions/artifacts/$ARTIFACT_ID"
        done

        echo "‚úÖ Cleanup complete."


