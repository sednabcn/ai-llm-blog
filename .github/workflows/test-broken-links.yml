name: Test Broken Links

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  broken-links:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'  # Update as required
          bundler-cache: true
      
      - name: Copy Remote Gemfile and Config (if applicable)
        run: |
          if [ -f Gemfile.remote ]; then cp Gemfile.remote Gemfile; fi
          for f in *config.remote.yml; do
            [ -f "$f" ] && cp "$f" "${f/.remote/}";
          done

      - name: Install dependencies
        run: |
          gem install bundler
          gem install mail
          bundle install

      - name: Build Jekyll site
        run: bundle exec jekyll build

      - name: Run Broken Links Checker
        run: ruby ./_tests/sitemap_links_checker.rb https://sednabcn.github.io/ai-llm-blog/

      - name: Show broken link results if available
        if: always()
        run: |
          if ls broken_links_*.txt 1> /dev/null 2>&1; then
            echo "Broken link reports:"
            cat broken_links_*.txt
          else
            echo "No broken link report generated."
          fi

      - name: Upload Broken Links Report
        if: always()
        uses: actions/upload-artifact@v4.3.1
        with:
          name: broken-links-report
          path: broken_links_*.txt

      - name: Slack Notification on Broken Links
        if: failure()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text": "⚠️ Broken links were found during the Jekyll deployment. Check the logs: https://github.com/sednabcn/ai-llm-blog/actions/runs/${{ github.run_id }}", "channel": "#your-slack-channel", "username": "GitHub Actions"}' \
          "${{ secrets.SLACK_WEBHOOK_URL }}"

      - name: Send Email on Broken Links
        if: failure()
        run: ruby ./_tests/send_email_smtp.rb
        env:
          SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          TO_EMAIL: ${{ secrets.SMTP_USERNAME }}